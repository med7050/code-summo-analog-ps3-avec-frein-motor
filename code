#include <Ps3Controller.h>

// DÃ©finir les broches de contrÃ´le des moteurs
#define LEFT_RPWM   26
#define LEFT_LPWM   25
#define LEFT_REN    14
#define LEFT_LEN    27

#define RIGHT_RPWM  5
#define RIGHT_LPWM  18
#define RIGHT_REN   16
#define RIGHT_LEN   17

int speedMultiplier = 255; // Vitesse par dÃ©faut
bool isStopped = false;    // Flag d'arrÃªt d'urgence

void notify() {
  Serial.println("âœ… Manette connectÃ©e.");
}

void setup() {
  Serial.begin(115200);
  Ps3.attach(notify);

  Ps3.begin("00:00:00:00:00:00"); // ðŸ”„ Remplacer par l'adresse MAC de votre manette
  Serial.println("ðŸ”Œ En attente de connexion...");

  // Configuration des broches moteurs
  pinMode(LEFT_REN, OUTPUT);
  pinMode(LEFT_LEN, OUTPUT);
  pinMode(RIGHT_REN, OUTPUT);
  pinMode(RIGHT_LEN, OUTPUT);

  digitalWrite(LEFT_REN, HIGH);
  digitalWrite(LEFT_LEN, HIGH);
  digitalWrite(RIGHT_REN, HIGH);
  digitalWrite(RIGHT_LEN, HIGH);
}

void updateSpeed() {
  if (Ps3.data.button.r1) {
    speedMultiplier = 255;
  } else if (Ps3.data.button.r2) {
    speedMultiplier = 63.75;
  } else if (Ps3.data.button.l1) {
    speedMultiplier = 127.5;
  } else if (Ps3.data.button.l2) {
    speedMultiplier = 191.25;
  }
}

void moveRobot(int leftSpeed, int rightSpeed) {
  leftSpeed = constrain(leftSpeed, -255, 255);
  rightSpeed = constrain(rightSpeed, -255, 255);

  // Moteur gauche
  if (leftSpeed >= 0) {
    analogWrite(LEFT_RPWM, leftSpeed);
    analogWrite(LEFT_LPWM, 0);
  } else {
    analogWrite(LEFT_RPWM, 0);
    analogWrite(LEFT_LPWM, -leftSpeed);
  }

  // Moteur droit
  if (rightSpeed >= 0) {
    analogWrite(RIGHT_RPWM, rightSpeed);
    analogWrite(RIGHT_LPWM, 0);
  } else {
    analogWrite(RIGHT_RPWM, 0);
    analogWrite(RIGHT_LPWM, -rightSpeed);
  }
}

void loop() {
  if (Ps3.isConnected()) {
    // VÃ©rifie si le bouton circle est enfoncÃ© pour arrÃªt d'urgence
    if (Ps3.data.button.circle) {
      if (!isStopped) {
        Serial.println("â›” ArrÃªt d'urgence activÃ© !");
        moveRobot(0, 0);
        isStopped = true;
      }
    } else {
      if (isStopped) {
        Serial.println("âœ… ArrÃªt d'urgence dÃ©sactivÃ©.");
        isStopped = false;
      }
    }

    if (!isStopped) {
      updateSpeed();

      // Lecture des sticks
      int forwardBackward = -Ps3.data.analog.stick.ly;
      int turn = Ps3.data.analog.stick.rx;

      int fbSpeed = map(forwardBackward, -128, 127, -speedMultiplier, speedMultiplier);
      int turnSpeed = map(turn, -128, 127, -speedMultiplier, speedMultiplier);

      int leftMotorSpeed = fbSpeed + turnSpeed;
      int rightMotorSpeed = fbSpeed - turnSpeed;

      leftMotorSpeed = constrain(leftMotorSpeed, -255, 255);
      rightMotorSpeed = constrain(rightMotorSpeed, -255, 255);

      moveRobot(leftMotorSpeed, rightMotorSpeed);
    }
  }
}
